import React, { useState, useEffect } from "react";
import axios from "axios";
import bitcoin from "../../src/assets/bitcoin.png";
import { Link } from "react-router-dom";
import Search from "./Search";

function CoinProjectBox() {

  const spanStyle = {
    height: "30px",
    maxHeight: "30px",
  };

  const [searchQuery, setSearchQuery] = useState("");
  const [projects, setProjects] = useState([]);

  const filteredProjects = projects.filter((projects) =>
    projects.project_name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  useEffect(() => {
    axios
      .get("http://marifx.com:8082/api/projects")
      .then((res) => {
        setProjects(res.data);
        console.log(res.data)
      })
      .catch((err) => {
        console.log("Error from ShowProjectList");
      });
  }, []);

  return (
    <>
      <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery} />
      <div className="grid grid-cols-3 gap-5 mt-6">
        {filteredProjects.map((project, index) => (
    
          <Link to={`/${project._id}`}
            className="hover:text-white mb-5" 
            key={index + 1}>
            <div className="bg-[#222531] relative  rounded-md border-[1px] border-[#F38010]">
              <div className="relative">
                <img
                  src={project.banner_image}
                  alt="project banner"
                  style={{ maxHeight: "130px", width: "350px" }}
                />
                <img
                  src={project.thumb}
                  className="w-[60px] absolute right-4 -bottom-8"
                  alt="project logo"
                />
                {project.project_status === "TOKEN SALE" ? (
                  <p className="text-white font-bold bg-[#f38010] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                ) : (
                  <p className="text-white font-bold bg-[#16C784] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                )}
              </div>

              <div className="px-3 pt-2 pb-12 flex flex-col gap-1">
                <h3 className="text-white font-bold text-sm">
                  {project.project_name}
                </h3>
                <span className="text-[#F38010] text-[10px]">
                  {project.coin_name}
                </span>
                <span className="text-[#9B9BB0] text-[10px]" style={spanStyle}>
                  {project.introduction}
                </span>
                <div className="flex flex-col gap-2 mt-2">
                  <div className="flex justify-between">
                    <h6 className="text-xs">Amount For Sale</h6>
                    <p className="text-[10px]">
                      ${project.amount_for_sale.toLocaleString("en-US")}
                    </p>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">Token Price</h6>
                    <div className="flex gap-1 items-center">
                      <p className="text-[10px] text-[#F38010]">
                        ${project.token_price}
                      </p>
                      <img alt="bitcoin icon"
                        src={bitcoin}
                        className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
                      />
                    </div>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">Total Raised</h6>
                    <div className="flex gap-1 items-center">
                      <p className="text-[10px] text-[#F38010]">
                        {project.total_raised.toLocaleString("en-US")} /{" "}
                        {project.amount_for_sale.toLocaleString("en-US")} BTC
                      </p>
                      <img alt="bitcoin icon"
                        src={bitcoin}
                        className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
                      />
                    </div>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">Progress</h6>
                    <p className="text-[10px]">{project.progress}%</p>
                  </div>
                </div>
              </div>

              <div className="bg-[#F38010] absolute bottom-0 py-1 px-2 w-full">
                <h6 className="text-black text-xs font-bold">
                  <span className="text-white text-xs font-bold">
                    Token Sale
                  </span>
                  {"   "} 

                  END IN
                  {new Date(project.token_sale_ends).toLocaleString('en-US', { month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true, timeZone: 'UTC' })}
                  {" "}UTC
                </h6>
              </div>
            </div>
          </Link>
        ))}
      </div>
    </>
  );
}

export default CoinProjectBox;


import React, { useState, useEffect } from "react";
import axios from "axios";
import bitcoin from "../../src/assets/bitcoin.png";
import { Link } from "react-router-dom";
import Search from "./Search";

function Countdown({ targetDate, projectStatus }) {
  const [countdown, setCountdown] = useState({
    days: 0,
    hours: 0,
    minutes: 0,
    seconds: 0,
  });

  useEffect(() => {
    const interval = setInterval(() => {
      const target = new Date(targetDate);
      const now = new Date();

      const timeLeftMs = target.getTime() - now.getTime();
      if (timeLeftMs < 0) {
        clearInterval(interval);
        setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });
      } else {
        const days = Math.floor(timeLeftMs / (1000 * 60 * 60 * 24));
        const hours = Math.floor(
          (timeLeftMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
        );
        const minutes = Math.floor(
          (timeLeftMs % (1000 * 60 * 60)) / (1000 * 60)
        );
        const seconds = Math.floor((timeLeftMs % (1000 * 60)) / 1000);
        setCountdown({ days, hours, minutes, seconds });
      }
    }, 1000);

    return () => clearInterval(interval);
  }, [targetDate]);

  return (
    <span className="text-white text-xs font-bold">
      {projectStatus === "TOKEN SALE" ? (
        <>
          END IN END IN {countdown.days} D: {countdown.hours} H: {countdown.minutes} M: {countdown.seconds} S
        </>
      ) : (
        <>
          COMPLETED ON{" "}
          {new Date(targetDate).toLocaleString("en-US", {
            month: "short",
            day: "numeric",
            year: "numeric",
            hour: "numeric",
            minute: "numeric",
            hour12: true,
            timeZone: "UTC",
          })}{" "}
          UTC
        </>
      )}
    </span>
  );
}

function CoinProjectBox() {
  const spanStyle = {
    height: "30px",
    maxHeight: "30px",
  };

  const [searchQuery, setSearchQuery] = useState("");
  const [projects, setProjects] = useState([]);

  const filteredProjects = projects.filter((project) =>
    project.project_name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  useEffect(() => {
    axios
      .get("http://localhost:8082/api/projects")
      .then((res) => {
        setProjects(res.data);
        console.log(res.data);
      })
      .catch((err) => {
        console.log("Error from ShowProjectList");
      });
  }, []);

  return (
    <>
      <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery} />
      <div className="grid grid-cols-3 gap-5 mt-6">
        {filteredProjects.map((project, index) => (
          <Link
            to={`/${project._id}`}
            className="hover:text-white mb-5"
            key={index + 1}
          >
            <div className="bg-[#222531] relative  rounded-md border-[1px] border-[#F38010]">
              <div className="relative">
                <img
                  src={project.banner_image}
                  alt="project banner"
                  style={{ maxHeight: "130px", width: "350px" }}
                />
                <img
                  src={project.thumb}
                  className="w-[60px] absolute right-4 -bottom-8"
                  alt="project logo"
                />
                {project.project_status === "TOKEN SALE" ? (
                  <p className="text-white font-bold bg-[#f38010] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                ) : (
                  <p className="text-white font-bold bg-[#16C784] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                )}
              </div>

              <div className="px-3 pt-2 pb-12 flex flex-col gap-1">
                <h3 className="text-white font-bold text-sm">
                  {project.project_name}
                </h3>
                <span className="text-[#F38010] text-[10px]">
                  {project.coin_name}
                </span>
                <span className="text-[#9B9BB0] text-[10px]" style={spanStyle}>
                  {project.introduction}
                </span>
                <div className="flex flex-col gap-2 mt-2">
                  <div className="flex justify-between">
                    <h6 className="text-xs">Amount For Sale</h6>
                    <p className="text-[10px]">
                      ${project.amount_for_sale.toLocaleString("en-US")}
                    </p>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">TokenPrice</h6>
                    <div className="flex gap-1 items-center">
                      <p className="text-[10px] text-[#F38010]">
                        ${project.token_price}
                      </p>
                      <img
                        alt="bitcoin icon"
                        src={bitcoin}
                        className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
                      />
                    </div>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">Total Raised</h6>
                    <div className="flex gap-1 items-center">
                      <p className="text-[10px] text-[#F38010]">
                        {project.total_raised.toLocaleString("en-US")} /{" "}
                        {project.amount_for_sale.toLocaleString("en-US")} BTC
                      </p>
                      <img
                        alt="bitcoin icon"
                        src={bitcoin}
                        className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
                      />
                    </div>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">Progress</h6>
                    <p className="text-[10px]">{project.progress}%</p>
                  </div>
                </div>
              </div>

              <div className="bg-[#F38010] absolute bottom-0 py-1 px-2 w-full">
                {project.project_status === "TOKEN SALE" && (
                  <Countdown targetDate={project.token_sale_ends} />
                )}
              </div>
            </div>
          </Link>
        ))}
      </div>
    </>
  );
}

export default CoinProjectBox;


import React, { useState, useEffect } from "react";
import axios from "axios";
import bitcoin from "../../src/assets/bitcoin.png";
import { Link } from "react-router-dom";
import Search from "./Search";

function Countdown({ targetDate }) {
  const [countdown, setCountdown] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 });

  useEffect(() => {
    const interval = setInterval(() => {
      const target = new Date(targetDate);
      const now = new Date();

      const timeLeftMs = target.getTime() - now.getTime();
      if (timeLeftMs < 0) {
        clearInterval(interval);
        setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });
      } else {
        const days = Math.floor(timeLeftMs / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeftMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeftMs % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeftMs % (1000 * 60)) / 1000);
        setCountdown({ days, hours, minutes, seconds });
      }
    }, 1000);

    return () => clearInterval(interval);
  }, [targetDate]);

  return (
    <span className="text-white text-xs font-bold">
      END IN {countdown.days} D: {countdown.hours} H: {countdown.minutes} M: {countdown.seconds} S
    </span>
  );
}

function CoinProjectBox() {
  const spanStyle = {
    height: "30px",
    maxHeight: "30px",
  };

  const [searchQuery, setSearchQuery] = useState("");
  const [projects, setProjects] = useState([]);

  const filteredProjects = projects.filter((project) =>
    project.project_name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  useEffect(() => {
    axios
      .get("http://localhost:8082/api/projects")
      .then((res) => {
        setProjects(res.data);
        console.log(res.data);
      })
      .catch((err) => {
        console.log("Error from ShowProjectList");
      });
  }, []);

  return (
    <>
      <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery} />
      <div className="grid grid-cols-3 gap-5 mt-6">
        {filteredProjects.map((project, index) => (
          <Link to={`/${project._id}`} className="hover:text-white mb-5" key={index + 1}>
            <div className="bg-[#222531] relative  rounded-md border-[1px] border-[#F38010]">
              <div className="relative">
                <img
                  src={project.banner_image}
                  alt="project banner"
                  style={{ maxHeight: "130px", width: "350px" }}
                />
                <img src={project.thumb} className="w-[60px] absolute right-4 -bottom-8" alt="project logo" />
                {project.project_status === "TOKEN SALE" ? (
                  <p className="text-white font-bold bg-[#f38010] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                ) : (
                  <p className="text-white font-bold bg-[#16C784] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                )}
              </div>

              <div className="px-3 pt-2 pb-12 flex flex-col gap-1">
                <h3 className="text-white font-bold text-sm">{project.project_name}</h3>
                <span className="text-[#F38010] text-[10px]">{project.coin_name}</span>
                <span className="text-[#9B9BB0] text-[10px]" style={spanStyle}>
                  {project.introduction}
                </span>
                <div className="flex flex-col gap-2 mt-2">
                  <div className="flex justify-between">
                    <h6 className="text-xs">Amount For Sale</h6>
                    <p className="text-[10px]">${project.amount_for_sale.toLocaleString("en-US")}</p>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">TokenPrice</h6>
                    <div className="flex gap-1 items-center">
                      <p className="text-[10px] text-[#F38010]">${project.token_price}</p>
                      <img
                        alt="bitcoin icon"
                        src={bitcoin}
                        className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
                      />
                    </div>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">Total Raised</h6>
                    <div className="flex gap-1 items-center">
                      <p className="text-[10px] text-[#F38010]">
                        {project.total_raised.toLocaleString("en-US")} / {project.amount_for_sale.toLocaleString("en-US")}{" "}
                        BTC
                      </p>
                      <img
                        alt="bitcoin icon"
                        src={bitcoin}
                        className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
                      />
                    </div>
                  </div>
                  <div className="flex justify-between">
                    <h6 className="text-xs">Progress</h6>
                    <p className="text-[10px]">{project.progress}%</p>
                  </div>
                </div>
              </div>

              <div className="bg-[#F38010] absolute bottom-0 py-1 px-2 w-full">
                {project.project_status === "TOKEN SALE" && (
                  <Countdown targetDate={project.token_sale_ends} />
                )}
              </div>
            </div>
          </Link>
        ))}
      </div>
    </>
  );
}

export default CoinProjectBox;



import React, { useState, useEffect } from "react";
import axios from "axios";
import bitcoin from "../../src/assets/bitcoin.png";
import { Link } from "react-router-dom";
import Search from "./Search";

function Countdown({ targetDate, projectStatus }) {
  const [countdown, setCountdown] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 });

  useEffect(() => {
    const interval = setInterval(() => {
      const target = new Date(targetDate);
      const now = new Date();

      const timeLeftMs = target.getTime() - now.getTime();
      if (timeLeftMs < 0) {
        clearInterval(interval);
        setCountdown({ days: 0, hours: 0, minutes: 0, seconds: 0 });
      } else {
        const days = Math.floor(timeLeftMs / (1000 * 60 * 60 * 24));
        const hours = Math.floor((timeLeftMs % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((timeLeftMs % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((timeLeftMs % (1000 * 60)) / 1000);
        setCountdown({ days, hours, minutes, seconds });
      }
    }, 1000);

    return () => clearInterval(interval);
  }, [targetDate]);

  return (
    <span className="text-white text-xs font-bold">
      {projectStatus === "TOKEN SALE" ? (
        <>
          END IN {countdown.days} days, {countdown.hours} hours, {countdown.minutes} minutes, {countdown.seconds} seconds UTC
        </>
      ) : (
        <>
          COMPLETED ON{" "}
          {new Date(targetDate).toLocaleString("en-US", {
            month: "short",
            day: "numeric",
            year: "numeric",
            hour: "numeric",
            minute: "numeric",
            hour12: true,
            timeZone: "UTC",
          })}
          {" "}UTC
        </>
      )}
    </span>
  );
}

function CoinProjectBox() {
  const spanStyle = {
    height: "30px",
    maxHeight: "30px",
  };

  const [searchQuery, setSearchQuery] = useState("");
  const [projects, setProjects] = useState([]);

  const filteredProjects = projects.filter((project) =>
    project.project_name.toLowerCase().includes(searchQuery.toLowerCase())
  );

  useEffect(() => {
    axios
      .get("http://marifx.com:8082/api/projects")
      .then((res) => {
        setProjects(res.data);
        console.log(res.data);
      })
      .catch((err) => {
        console.log("Error from ShowProjectList");
      });
  }, []);

  return (
    <>
      <Search searchQuery={searchQuery} setSearchQuery={setSearchQuery} />
      <div className="grid grid-cols-3 gap-5 mt-6">
        {filteredProjects.map((project, index) => (
          <Link to={`/${project._id}`} className="hover:text-white mb-5" key={index + 1}>
            <div className="bg-[#222531] relative  rounded-md border-[1px] border-[#F38010]">
              <div className="relative">
                <img
                  src={project.banner_image}
                  alt="project banner"
                  style={{ maxHeight: "130px", width: "350px" }}
                />
                <img src={project.thumb} className="w-[60px] absolute right-4 -bottom-8" alt="project logo" />
                {project.project_status === "TOKEN SALE" ? (
                  <p className="text-white font-bold bg-[#f38010] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                ) : (
                  <p className="text-white font-bold bg-[#16C784] py-[2px] text-[10px] rounded-sm px-2 absolute top-2 right-4">
                    {project.project_status}
                  </p>
                )}
              </div>

              <div className="px-3 pt-2 pb-12 flex flex-col gap-1">
                <h3 className="text-white font-bold text-sm">{project.project_name}</h3>
                <Countdown targetDate={project.token_sale_ends} projectStatus={project.project_status} />
              </div>
            </div>
          </Link>
        ))}
      </div>
    </>
  );
}

export default CoinProjectBox;


import React from 'react'
import { Link } from 'react-router-dom'

function AlertBox() {
    return (

        <div className='bg-[#583619] py-3 px-7 mt-8 mb-10  rounded-md flex justify-between items-center'>
            <div>
                <h5 className='text-white text-xs'>Apply for IDO on BRC-20 DAO Launchpad</h5>
                <p className='text-xs mt-2 text-[#9B9BB0]'>Launch your BRC-20 token on BRC-20 DAO Launchpad to connect with our core community.</p>
            </div>
            <div>
                <Link className='bg-[#16161D] py-1 px-3 rounded-[5px] text-xs text-[#F38010] border-[1px] border-[#F38010]'>Discord Channel </Link>
            </div>
        </div>


    )
}

export default AlertBox


import React from 'react'
import "./Table.css";
import "sorttable";
import { BiSearch } from "react-icons/bi";

function Search({ setSearchQuery, searchQuery }) {

    const handleSearchInput = (event) => {
        setSearchQuery(event.target.value);
    };
    return (

        <div className='flex w-[50%]  gap-3 items-center'>
            <div className='w-[45%] flex bg-[#21242E] px-2 py-[12px] gap-2 rounded-md items-center'>
                <BiSearch  className='text-[#9B9BB0]'/>
                <input id="search"
                    className='bg-transparent outline-none border-none text-xs text-[#9B9BB0]'
                    type="text"
                    placeholder="Search by name..."
                    value={searchQuery}
                    onChange={(event) => handleSearchInput(event)}
                />
            </div>

            <div className="flex justify-between gap-3 items-center">
               <span className='font-normal'>|</span>
               <span className="bg-[#F380101A] p-[5px] rounded text-xs cursor-pointer">All</span>
               <span className='text-xs cursor-pointer'>In-Progress</span>
               <span className='text-xs cursor-pointer'>Completed</span>
             </div>
        </div>
    )
}

export default Search


import React from "react";
import {
  FaChevronLeft,
  FaTelegramPlane,
  FaTwitter,
  FaDiscord,
} from "react-icons/fa";
import { TbWorldWww } from "react-icons/tb";

import { Link } from "react-router-dom";
import social from "../../src/assets/social.png";
import bitcoin from "../../src/assets/bitcoin.png";

function ProjectInfo(props) {
  const project = props.project;
  return (
    <div
    style={{
      backgroundImage: `linear-gradient(0deg, rgba(12, 12, 12, 1), rgba(40, 37, 31, 0.1)), url(${project.banner_image})`,
      backgroundPosition: "center",
      backgroundSize: "100% auto",
      backgroundRepeat: "no-repeat",
    }}
    className="mt-32 rounded-xl relative h-[350px]"
  >
      <Link to="/launchpad">
        <div className="items-center text-white  rounded-sm   font-bold absolute top-4 left-12 py-[2px] flex gap-1  px-2 bg-gray-400">
          <FaChevronLeft className="text-[14px] font-extrabold" />
          <p className="text-[12px]">LaunchPad Homepage</p>
        </div>
      </Link>
      <p className="text-white font-bold bg-[#f38010] py-[2px] text-[12px] rounded-sm px-2 absolute top-4 right-12">
        Whitelist SALE
      </p>

      <div className="flex flex-col items-center justify-center h-full">
        <img src={project.thumb} className="w-16" alt="project thumb" />
        <h2 className="font-bold mt-2 text-xl">{project.project_name}</h2>
        <span className="text-white mt-1 text-xs">{project.introduction}</span>
        <div className="flex gap-2 mt-2">
          <TbWorldWww className="bg-white rounded-full p-[5px] text-black text-2xl" />
          <FaTelegramPlane className="bg-white rounded-full p-[5px] text-black text-2xl" />
          <FaTwitter className="bg-white rounded-full p-[5px] text-black text-2xl" />
          <FaDiscord className="bg-white rounded-full p-[5px] text-black text-2xl" />

          <div className="p-1 bg-white rounded-full h-6 w-6 flex items-center justify-center">
            <img src={social} className="w-5 h-[10px]" alt="project social icons" />
          </div>
        </div>
      </div>

      <div className=" gap-5 absolute bottom-4  w-full flex items-center px-12 justify-center">
        <div className="flex flex-col gap-0">
          <label className="text-xs">Amount For Sale</label>
          <p className="text-base -mt-2">
           {project.amount_for_sale ? Number(project.amount_for_sale).toLocaleString() : ""}
          </p>
        </div>
        <span className="h-6 w-[1px] border-r border-gray-50"></span>
        <div className="flex flex-col gap-0">
          <label className="text-xs">Total Raised</label>
          <div className="flex gap-1 items-center -mt-2">
            <p className=" text-base text-[#F38010]">
              {project.total_raised ? Number(project.total_raised).toLocaleString() : ""}
            </p>
            <img alt="bitcoin icon"
              src={bitcoin}
              className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
            />
          </div>
        </div>
        <span className="h-6 w-[1px] border-r border-gray-50"></span>

        <div className="flex flex-col gap-0">
          <label className="text-xs">Participants</label>
          <p className="text-base -mt-2">
            {project.participants ? Number(project.participants).toLocaleString() : ""}
          </p>
        </div>
        <span className="h-6 w-[1px] border-r border-gray-50"></span>

        <div className="flex flex-col gap-0">
          <label className="text-xs">Token Price</label>
          <div className="flex gap-1 items-center -mt-2">
            <p className=" text-base text-[#fff]">
              1 Majo = 
              {project.token_price ? Number(project.token_price).toLocaleString() : ""}
              {" "} BTC
            </p>
            <img alt="bitcoin icon"
              src={bitcoin}
              className="w-[18px] h-[19px] bg-[#f38010] p-1 rounded-full"
            />
          </div>
        </div>
      </div>
    </div>
  );
}

export default ProjectInfo;
